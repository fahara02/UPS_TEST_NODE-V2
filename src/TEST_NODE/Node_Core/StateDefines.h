#ifndef STATE_DEFINES_H_
#define STATE_DEFINES_H_
#include "freertos/FreeRTOS.h"
#include "freertos/event_groups.h"
#include <cstdint>

namespace Node_Core {
using StateBits = uint32_t;
enum class State : StateBits {
  DEVICE_ON = 1 << 0,            // 01
  DEVICE_READY = 1 << 1,         // 10
  DEVICE_DISCONNECTED = 1 << 2,  // 100
  RETEST = 1 << 3,               // 1000
  MANUAL_MODE = 1 << 4,
  AUTO_MODE = 1 << 5,
  SWITCHING_TEST_START = 1 << 6,
  SWITCHING_TEST_25P_DONE = 1 << 7,
  SWITCHING_TEST_50P_START = 1 << 8,
  SWITCHING_TEST_50P_DONE = 1 << 9,
  SWITCHING_TEST_75P_START = 1 << 10,
  SWITCHING_TEST_75P_DONE = 1 << 11,
  SWITCHING_TEST_FULLLOAD_START = 1 << 12,
  SWITCHING_TEST_FULLLOAD_DONE = 1 << 13,
  SWITCHING_TEST_OK = 1 << 14,
  READY_NEXT_TEST = 1 << 15,
  EFFICIENCY_TEST_START = 1 << 16,
  EFFICIENCY_TEST_DONE = 1 << 17,
  EFFICIENCY_TEST_OK = 1 << 18,
  BACKUP_TIME_TEST_START = 1 << 19,
  BACKUP_TIME_TEST_DONE = 1 << 20,
  BACKUP_TIME_TEST_OK = 1 << 21,
  SAVE_TEST_DATA = 1 << 22,
  ALL_TEST_DONE = 1 << 23,
  ADDENDUM_TEST_DATA = 1 << 24,
  REPORT_AVAILABLE = 1 << 25,
  PRINT_TEST_DATA = 1 << 26,
  FAILED_TEST = 1 << 27,
  FAULT = 1 << 28,
};

enum class Event {
  NONE = -1,
  ERROR = 0,
  SELF_CHECK_OK,
  WIFI_CONNECTED,
  WIFI_DISCONNECTED,
  SETTING_LOADED,
  MANUAL_OVERRIDE,
  AUTO_TEST_CMD,
  TEST_DONE,
  DATA_CAPTURE_OK,
  VALIDATE_TEST,
  INPUT_OUTPUT_READY,
  MESURED_DATA_RECEIVED,
  SAVE,
  DATA,
  MANUAL_DATA_ENTRY,
  TRANSPORT_DATA,
  PRINT_DATA,
  TEST_SUCCESS,
  TEST_FAILED,
  RETEST,
  RETEST_OK,
  RETRY_CONNECT,
  RETRY_OK,
  SYSTEM_FAULT,
  POWER_DEVICE_DOWN,
  SWITCHING_DEVICE_DOWN,
  RESTART
};

}  // namespace Node_Core
#endif