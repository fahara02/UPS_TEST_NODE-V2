/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PG_REPORT_PB_H_INCLUDED
#define PB_PG_REPORT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _pg_PowerMeasureType {
    pg_PowerMeasureType_UPS_INPUT = 0,
    pg_PowerMeasureType_UPS_OUTPUT = 1,
    pg_PowerMeasureType_MAINS = 2
} pg_PowerMeasureType;

/* Struct definitions */
typedef struct _pg_PowerMeasure {
    pg_PowerMeasureType type;
    float voltage;
    float current;
    float power;
    float pf;
} pg_PowerMeasure;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _pg_PowerMeasureType_MIN pg_PowerMeasureType_UPS_INPUT
#define _pg_PowerMeasureType_MAX pg_PowerMeasureType_MAINS
#define _pg_PowerMeasureType_ARRAYSIZE ((pg_PowerMeasureType)(pg_PowerMeasureType_MAINS+1))

#define pg_PowerMeasure_type_ENUMTYPE pg_PowerMeasureType


/* Initializer values for message structs */
#define pg_PowerMeasure_init_default             {_pg_PowerMeasureType_MIN, 0, 0, 0, 0}
#define pg_PowerMeasure_init_zero                {_pg_PowerMeasureType_MIN, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pg_PowerMeasure_type_tag                 1
#define pg_PowerMeasure_voltage_tag              2
#define pg_PowerMeasure_current_tag              3
#define pg_PowerMeasure_power_tag                4
#define pg_PowerMeasure_pf_tag                   5

/* Struct field encoding specification for nanopb */
#define pg_PowerMeasure_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           3) \
X(a, STATIC,   SINGULAR, FLOAT,    power,             4) \
X(a, STATIC,   SINGULAR, FLOAT,    pf,                5)
#define pg_PowerMeasure_CALLBACK NULL
#define pg_PowerMeasure_DEFAULT NULL

extern const pb_msgdesc_t pg_PowerMeasure_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pg_PowerMeasure_fields &pg_PowerMeasure_msg

/* Maximum encoded size of messages (where known) */
#define PG_REPORT_PB_H_MAX_SIZE                  pg_PowerMeasure_size
#define pg_PowerMeasure_size                     22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
